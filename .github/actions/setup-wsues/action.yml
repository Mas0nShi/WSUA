name: 'Setup WSUEs'
description: 'Download and setup WSUEs tool'
inputs:
  token:
    description: 'GitHub token for downloading WSUEs'
    required: true
  workspace-path:
    description: 'Workspace path'
    required: true
    default: ${{ github.workspace }}
outputs:
  wsues-path:
    description: 'Path to WSUEs executable'
    value: ${{ steps.setup.outputs.wsues-path }}
  storage-path:
    description: 'Path to storage directory'
    value: ${{ steps.setup.outputs.storage-path }}

runs:
  using: 'composite'
  steps:
    - name: Setup paths and directories
      id: setup
      shell: powershell
      run: |
        $wsuesPath = "${{ inputs.workspace-path }}\bin"
        $storagePath = "${{ inputs.workspace-path }}\storage"
        
        # Create directories
        New-Item -ItemType Directory -Path $wsuesPath -Force
        New-Item -ItemType Directory -Path $storagePath -Force
        
        # Set outputs
        echo "wsues-path=$wsuesPath" >> $env:GITHUB_OUTPUT
        echo "storage-path=$storagePath" >> $env:GITHUB_OUTPUT
        
        Write-Host "Created directories:"
        Write-Host "  WSUEs: $wsuesPath"
        Write-Host "  Storage: $storagePath"

    - name: Download WSUEs
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'Mas0nShi/WSUEs'
        file: 'wsues.zip'
        token: ${{ inputs.token }}

    - name: Extract WSUEs
      shell: powershell
      run: |
        $zipPath = "${{ inputs.workspace-path }}\wsues.zip"
        $extractPath = "${{ steps.setup.outputs.wsues-path }}"
        
        try {
          Expand-Archive -Path $zipPath -DestinationPath $extractPath -Force
          Write-Host "WSUEs extracted successfully to $extractPath"
          
          # Verify executable exists
          $exePath = "$extractPath\wsues.exe"
          if (Test-Path $exePath) {
            Write-Host "WSUEs executable found: $exePath"
          } else {
            Write-Error "WSUEs executable not found!"
            exit 1
          }
        } catch {
          Write-Error "Failed to extract WSUEs: $($_.Exception.Message)"
          exit 1
        }
