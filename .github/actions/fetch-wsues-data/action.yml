name: 'Fetch WSUEs Data'
description: 'Fetch WSUEs data for specified date and products'
inputs:
  wsues-path:
    description: 'Path to WSUEs executable'
    required: true
  storage-path:
    description: 'Path to storage directory'
    required: true
  date:
    description: 'Date to fetch data for (YYYY-MM format)'
    required: true
  fetch-type:
    description: 'Type of fetch: single or all'
    required: true
    default: 'all'
  product:
    description: 'Product name (required for single fetch)'
    required: false
outputs:
  output-files:
    description: 'Path pattern to output files'
    value: ${{ steps.fetch.outputs.output-files }}

runs:
  using: 'composite'
  steps:
    - name: Fetch WSUEs data
      id: fetch
      uses: actions/github-script@v7
      with:
        script: |
          const { execSync } = require('child_process');
          const fs = require('fs');
          const path = require('path');
          
          // Input parameters
          const wsuesPath = '${{ inputs.wsues-path }}';
          const storagePath = '${{ inputs.storage-path }}';
          const date = '${{ inputs.date }}';
          const fetchType = '${{ inputs.fetch-type }}';
          const product = '${{ inputs.product }}';
          
          const wsuesExe = path.join(wsuesPath, 'wsues.exe');
          
          try {
            console.log('üîÑ Fetching WSUEs data...');
            console.log(`  Date: ${date}`);
            console.log(`  Type: ${fetchType}`);
            
            if (fetchType === 'single') {
              if (!product) {
                core.setFailed('‚ùå Product is required for single fetch');
                return;
              }
              
              const outputFile = path.join(storagePath, `${product}.json`);
              console.log(`  Product: ${product}`);
              console.log(`  Output: ${outputFile}`);
              
              // Execute WSUEs command for single product
              execSync(`"${wsuesExe}" get --date "${date}" --product "${product}" -o "${outputFile}"`, {
                stdio: 'inherit',
                shell: true
              });
              
              core.setOutput('output-files', outputFile);
              console.log('‚úÖ Single product fetch completed');
              
            } else {
              console.log(`  Output directory: ${storagePath}`);
              
              // Execute WSUEs command for all products
              execSync(`"${wsuesExe}" get-all --date "${date}" -o "${storagePath}"`, {
                stdio: 'inherit',
                shell: true
              });
              
              // List generated files
              const jsonFiles = fs.readdirSync(storagePath)
                .filter(file => file.endsWith('.json'));
              
              console.log('‚úÖ Fetch-all completed. Generated files:');
              jsonFiles.forEach(file => {
                console.log(`  - ${file}`);
              });
              
              core.setOutput('output-files', path.join(storagePath, '*.json'));
            }
            
          } catch (error) {
            core.setFailed(`‚ùå Fetch operation failed: ${error.message}`);
          }
